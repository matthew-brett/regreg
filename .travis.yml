# vim ft=yaml
# Multiple lines can be made a single "virtual line" because of the way that
# Travis munges each line before executing it to print out the exit status.
# It's okay for it to be on multiple physical lines, so long as you remember:
# - There can't be any leading "-"s - All newlines will be removed, so use
# ";"s
sudo: false  # To use travis container infrastructure
language: python
cache:
  directories:
    - $HOME/.cache/pip

env:
    global:
        # Maximal dependencies
        - DEPENDS="cython numpy scipy matplotlib"
        - EXTRA_WHEELS="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
        - PRE_WHEELS="https://7933911d6844c6c53a7d-47bd50c35cd79bd838daf386af554a83.ssl.cf2.rackcdn.com"
        - EXTRA_PIP_FLAGS="--find-links=$EXTRA_WHEELS"
        - PRE_PIP_FLAGS="--pre --find-links $PRE_WHEELS"
        - INSTALL_TYPE="pip"

matrix:
    include:
        - python: 3.5
          sudo: true
          dist: trusty
          env:
            - DOC_BUILD=1

before_install:
    - python -m pip install --upgrade pip
    - pip install --upgrade virtualenv
    - virtualenv --python=python venv
    - source venv/bin/activate
    - python --version # just to check
    - pip install -U pip
    - pip install nose mock  # always
    - if [ -n "$PRE_DEPENDS" ]; then
        pip install $EXTRA_PIP_FLAGS $PRE_DEPENDS;
      fi
    - pip install $EXTRA_PIP_FLAGS $DEPENDS
    - if [ "${COVERAGE}" == "1" ]; then
        pip install coverage coveralls;
      fi

install:
# command to run tests, e.g. python setup.py test
    - |
      if [ "$INSTALL_TYPE" == "pip" ]; then
        pip install .
      elif [ "$INSTALL_TYPE" == "pip_e" ]; then
        pip install -e .
      elif [ "$INSTALL_TYPE" == "setup" ]; then
        python setup.py install
      elif [ "$INSTALL_TYPE" == "sdist" ]; then
        python setup.py egg_info  # check egg_info while we're here
        python setup.py sdist
        pip install $EXTRA_PIP_FLAGS dist/*.tar.gz
      elif [ "$INSTALL_TYPE" == "wheel" ]; then
        pip install wheel
        python setup.py bdist_wheel
        pip install $EXTRA_PIP_FLAGS dist/*.whl
      elif [ "$INSTALL_TYPE" == "requirements" ]; then
        pip install $EXTRA_PIP_FLAGS -r requirements.txt
        pip install -r requirements.txt
        python setup.py install
      fi
script:
    - |
      echo "backend : agg" > matplotlibrc
      if [ "$DOC_BUILD" ]; then  # doc build
        sudo apt-get install software-properties-common
        sudo add-apt-repository -y ppa:marutter/rrutter
        sudo apt-get update
        sudo apt-get install -y r-base r-base-dev
        sudo Rscript -e "install.packages(c('glmnet', 'lars', 'Matrix'), repos='http://cloud.r-project.org');"
        pip install -r doc-requirements.txt
        cd doc
        make html
      else
        # Doctests only on platforms that have compatible fp output
        if [ `uname` == "Darwin" ] ||
            [ "${TRAVIS_PYTHON_VERSION:0:1}" == "3" ]; then
            DOCTEST_ARGS="--with-doctest";
        fi
        # Change into an innocuous directory and find tests from installation
        mkdir for_testing
        cd for_testing
        if [ "${COVERAGE}" == "1" ]; then
          cp ../.coveragerc .
          COVER_ARGS="--with-coverage --cover-package regreg"
        fi
        nosetests $DOCTEST_ARGS --verbose $COVER_ARGS regreg
      fi
after_success:
    - if [ "${COVERAGE}" == "1" ]; then coveralls; fi
